export const elementAttributesTypeMap: Record<string, string> = {
    a: "React.AnchorHTMLAttributes<HTMLAnchorElement>",
    abbr: "React.HTMLAttributes<HTMLElement>",
    address: "React.HTMLAttributes<HTMLElement>",
    area: "React.AreaHTMLAttributes<HTMLAreaElement>",
    article: "React.HTMLAttributes<HTMLElement>",
    aside: "React.HTMLAttributes<HTMLElement>",
    audio: "React.AudioHTMLAttributes<HTMLAudioElement>",
    b: "React.HTMLAttributes<HTMLElement>",
    base: "React.BaseHTMLAttributes<HTMLBaseElement>",
    bdi: "React.HTMLAttributes<HTMLElement>",
    bdo: "React.HTMLAttributes<HTMLElement>",
    big: "React.HTMLAttributes<HTMLElement>",
    blockquote: "React.BlockquoteHTMLAttributes<HTMLElement>",
    body: "React.HTMLAttributes<HTMLBodyElement>",
    br: "React.HTMLAttributes<HTMLBRElement>",
    button: "React.ButtonHTMLAttributes<HTMLButtonElement>",
    canvas: "React.CanvasHTMLAttributes<HTMLCanvasElement>",
    caption: "React.HTMLAttributes<HTMLElement>",
    cite: "React.HTMLAttributes<HTMLElement>",
    code: "React.HTMLAttributes<HTMLElement>",
    col: "React.ColHTMLAttributes<HTMLTableColElement>",
    colgroup: "React.ColgroupHTMLAttributes<HTMLTableColElement>",
    data: "React.DataHTMLAttributes<HTMLDataElement>",
    datalist: "React.HTMLAttributes<HTMLDataListElement>",
    dd: "React.HTMLAttributes<HTMLElement>",
    del: "React.DelHTMLAttributes<HTMLElement>",
    details: "React.DetailsHTMLAttributes<HTMLElement>",
    dfn: "React.HTMLAttributes<HTMLElement>",
    dialog: "React.DialogHTMLAttributes<HTMLDialogElement>",
    div: "React.HTMLAttributes<HTMLDivElement>",
    dl: "React.HTMLAttributes<HTMLDListElement>",
    dt: "React.HTMLAttributes<HTMLElement>",
    em: "React.HTMLAttributes<HTMLElement>",
    embed: "React.EmbedHTMLAttributes<HTMLEmbedElement>",
    fieldset: "React.FieldsetHTMLAttributes<HTMLFieldSetElement>",
    figcaption: "React.HTMLAttributes<HTMLElement>",
    figure: "React.HTMLAttributes<HTMLElement>",
    footer: "React.HTMLAttributes<HTMLElement>",
    form: "React.FormHTMLAttributes<HTMLFormElement>",
    h1: "React.HTMLAttributes<HTMLHeadingElement>",
    h2: "React.HTMLAttributes<HTMLHeadingElement>",
    h3: "React.HTMLAttributes<HTMLHeadingElement>",
    h4: "React.HTMLAttributes<HTMLHeadingElement>",
    h5: "React.HTMLAttributes<HTMLHeadingElement>",
    h6: "React.HTMLAttributes<HTMLHeadingElement>",
    head: "React.HTMLAttributes<HTMLHeadElement>",
    header: "React.HTMLAttributes<HTMLElement>",
    hgroup: "React.HTMLAttributes<HTMLElement>",
    hr: "React.HTMLAttributes<HTMLHRElement>",
    html: "React.HtmlHTMLAttributes<HTMLHtmlElement>",
    i: "React.HTMLAttributes<HTMLElement>",
    iframe: "React.IframeHTMLAttributes<HTMLIFrameElement>",
    img: "React.ImgHTMLAttributes<HTMLImageElement>",
    input: "React.InputHTMLAttributes<HTMLInputElement>",
    ins: "React.InsHTMLAttributes<HTMLModElement>",
    kbd: "React.HTMLAttributes<HTMLElement>",
    keygen: "React.KeygenHTMLAttributes<HTMLElement>",
    label: "React.LabelHTMLAttributes<HTMLLabelElement>",
    legend: "React.HTMLAttributes<HTMLLegendElement>",
    li: "React.LiHTMLAttributes<HTMLLIElement>",
    link: "React.LinkHTMLAttributes<HTMLLinkElement>",
    main: "React.HTMLAttributes<HTMLElement>",
    map: "React.MapHTMLAttributes<HTMLMapElement>",
    mark: "React.HTMLAttributes<HTMLElement>",
    menu: "React.MenuHTMLAttributes<HTMLElement>",
    menuitem: "React.HTMLAttributes<HTMLElement>",
    meta: "React.MetaHTMLAttributes<HTMLMetaElement>",
    meter: "React.MeterHTMLAttributes<HTMLElement>",
    nav: "React.HTMLAttributes<HTMLElement>",
    noindex: "React.HTMLAttributes<HTMLElement>",
    noscript: "React.HTMLAttributes<HTMLElement>",
    object: "React.ObjectHTMLAttributes<HTMLObjectElement>",
    ol: "React.OlHTMLAttributes<HTMLOListElement>",
    optgroup: "React.OptgroupHTMLAttributes<HTMLOptGroupElement>",
    option: "React.OptionHTMLAttributes<HTMLOptionElement>",
    output: "React.OutputHTMLAttributes<HTMLElement>",
    p: "React.HTMLAttributes<HTMLParagraphElement>",
    param: "React.ParamHTMLAttributes<HTMLParamElement>",
    picture: "React.HTMLAttributes<HTMLElement>",
    pre: "React.HTMLAttributes<HTMLPreElement>",
    progress: "React.ProgressHTMLAttributes<HTMLProgressElement>",
    q: "React.QuoteHTMLAttributes<HTMLQuoteElement>",
    rp: "React.HTMLAttributes<HTMLElement>",
    rt: "React.HTMLAttributes<HTMLElement>",
    ruby: "React.HTMLAttributes<HTMLElement>",
    s: "React.HTMLAttributes<HTMLElement>",
    samp: "React.HTMLAttributes<HTMLElement>",
    slot: "React.SlotHTMLAttributes<HTMLSlotElement>",
    script: "React.ScriptHTMLAttributes<HTMLScriptElement>",
    section: "React.HTMLAttributes<HTMLElement>",
    select: "React.SelectHTMLAttributes<HTMLSelectElement>",
    small: "React.HTMLAttributes<HTMLElement>",
    source: "React.SourceHTMLAttributes<HTMLSourceElement>",
    span: "React.HTMLAttributes<HTMLSpanElement>",
    strong: "React.HTMLAttributes<HTMLElement>",
    style: "React.StyleHTMLAttributes<HTMLStyleElement>",
    sub: "React.HTMLAttributes<HTMLElement>",
    summary: "React.HTMLAttributes<HTMLElement>",
    sup: "React.HTMLAttributes<HTMLElement>",
    table: "React.TableHTMLAttributes<HTMLTableElement>",
    template: "React.HTMLAttributes<HTMLTemplateElement>",
    tbody: "React.HTMLAttributes<HTMLTableSectionElement>",
    td: "React.TdHTMLAttributes<HTMLTableDataCellElement>",
    textarea: "React.TextareaHTMLAttributes<HTMLTextAreaElement>",
    tfoot: "React.HTMLAttributes<HTMLTableSectionElement>",
    th: "React.ThHTMLAttributes<HTMLTableHeaderCellElement>",
    thead: "React.HTMLAttributes<HTMLTableSectionElement>",
    time: "React.TimeHTMLAttributes<HTMLElement>",
    title: "React.HTMLAttributes<HTMLTitleElement>",
    tr: "React.HTMLAttributes<HTMLTableRowElement>",
    track: "React.TrackHTMLAttributes<HTMLTrackElement>",
    u: "React.HTMLAttributes<HTMLElement>",
    ul: "React.HTMLAttributes<HTMLUListElement>",
    "var": "React.HTMLAttributes<HTMLElement>",
    video: "React.VideoHTMLAttributes<HTMLVideoElement>",
    wbr: "React.HTMLAttributes<HTMLElement>",
    webview: "React.WebViewHTMLAttributes<HTMLWebViewElement>",

    // SVG
    svg: "React.SVGAttributes<SVGSVGElement>",

    animate: "React.SVGAttributes<SVGElement>",
    animateMotion: "React.SVGAttributes<SVGElement>",
    animateTransform: "React.SVGAttributes<SVGElement>",
    circle: "React.SVGAttributes<SVGCircleElement>",
    clipPath: "React.SVGAttributes<SVGClipPathElement>",
    defs: "React.SVGAttributes<SVGDefsElement>",
    desc: "React.SVGAttributes<SVGDescElement>",
    ellipse: "React.SVGAttributes<SVGEllipseElement>",
    feBlend: "React.SVGAttributes<SVGFEBlendElement>",
    feColorMatrix: "React.SVGAttributes<SVGFEColorMatrixElement>",
    feComponentTransfer: "React.SVGAttributes<SVGFEComponentTransferElement>",
    feComposite: "React.SVGAttributes<SVGFECompositeElement>",
    feConvolveMatrix: "React.SVGAttributes<SVGFEConvolveMatrixElement>",
    feDiffuseLighting: "React.SVGAttributes<SVGFEDiffuseLightingElement>",
    feDisplacementMap: "React.SVGAttributes<SVGFEDisplacementMapElement>",
    feDistantLight: "React.SVGAttributes<SVGFEDistantLightElement>",
    feDropShadow: "React.SVGAttributes<SVGFEDropShadowElement>",
    feFlood: "React.SVGAttributes<SVGFEFloodElement>",
    feFuncA: "React.SVGAttributes<SVGFEFuncAElement>",
    feFuncB: "React.SVGAttributes<SVGFEFuncBElement>",
    feFuncG: "React.SVGAttributes<SVGFEFuncGElement>",
    feFuncR: "React.SVGAttributes<SVGFEFuncRElement>",
    feGaussianBlur: "React.SVGAttributes<SVGFEGaussianBlurElement>",
    feImage: "React.SVGAttributes<SVGFEImageElement>",
    feMerge: "React.SVGAttributes<SVGFEMergeElement>",
    feMergeNode: "React.SVGAttributes<SVGFEMergeNodeElement>",
    feMorphology: "React.SVGAttributes<SVGFEMorphologyElement>",
    feOffset: "React.SVGAttributes<SVGFEOffsetElement>",
    fePointLight: "React.SVGAttributes<SVGFEPointLightElement>",
    feSpecularLighting: "React.SVGAttributes<SVGFESpecularLightingElement>",
    feSpotLight: "React.SVGAttributes<SVGFESpotLightElement>",
    feTile: "React.SVGAttributes<SVGFETileElement>",
    feTurbulence: "React.SVGAttributes<SVGFETurbulenceElement>",
    filter: "React.SVGAttributes<SVGFilterElement>",
    foreignObject: "React.SVGAttributes<SVGForeignObjectElement>",
    g: "React.SVGAttributes<SVGGElement>",
    image: "React.SVGAttributes<SVGImageElement>",
    line: "React.SVGAttributes<SVGLineElement>",
    linearGradient: "React.SVGAttributes<SVGLinearGradientElement>",
    marker: "React.SVGAttributes<SVGMarkerElement>",
    mask: "React.SVGAttributes<SVGMaskElement>",
    metadata: "React.SVGAttributes<SVGMetadataElement>",
    mpath: "React.SVGAttributes<SVGElement>",
    path: "React.SVGAttributes<SVGPathElement>",
    pattern: "React.SVGAttributes<SVGPatternElement>",
    polygon: "React.SVGAttributes<SVGPolygonElement>",
    polyline: "React.SVGAttributes<SVGPolylineElement>",
    radialGradient: "React.SVGAttributes<SVGRadialGradientElement>",
    rect: "React.SVGAttributes<SVGRectElement>",
    stop: "React.SVGAttributes<SVGStopElement>",
    switch: "React.SVGAttributes<SVGSwitchElement>",
    symbol: "React.SVGAttributes<SVGSymbolElement>",
    text: "React.SVGAttributes<SVGTextElement>",
    textPath: "React.SVGAttributes<SVGTextPathElement>",
    tspan: "React.SVGAttributes<SVGTSpanElement>",
    use: "React.SVGAttributes<SVGUseElement>",
    view: "React.SVGAttributes<SVGViewElement>",
};

export const elementTypeMap: Record<string, string> = {
    a: "HTMLAnchorElement",
    abbr: "HTMLElement",
    address: "HTMLElement",
    area: "HTMLAreaElement",
    article: "HTMLElement",
    aside: "HTMLElement",
    audio: "HTMLAudioElement",
    b: "HTMLElement",
    base: "HTMLBaseElement",
    bdi: "HTMLElement",
    bdo: "HTMLElement",
    big: "HTMLElement",
    blockquote: "HTMLElement",
    body: "HTMLBodyElement",
    br: "HTMLBRElement",
    button: "HTMLButtonElement",
    canvas: "HTMLCanvasElement",
    caption: "HTMLElement",
    cite: "HTMLElement",
    code: "HTMLElement",
    col: "HTMLTableColElement",
    colgroup: "HTMLTableColElement",
    data: "HTMLDataElement",
    datalist: "HTMLDataListElement",
    dd: "HTMLElement",
    del: "HTMLElement",
    details: "HTMLElement",
    dfn: "HTMLElement",
    dialog: "HTMLDialogElement",
    div: "HTMLDivElement",
    dl: "HTMLDListElement",
    dt: "HTMLElement",
    em: "HTMLElement",
    embed: "HTMLEmbedElement",
    fieldset: "HTMLFieldSetElement",
    figcaption: "HTMLElement",
    figure: "HTMLElement",
    footer: "HTMLElement",
    form: "HTMLFormElement",
    h1: "HTMLHeadingElement",
    h2: "HTMLHeadingElement",
    h3: "HTMLHeadingElement",
    h4: "HTMLHeadingElement",
    h5: "HTMLHeadingElement",
    h6: "HTMLHeadingElement",
    head: "HTMLHeadElement",
    header: "HTMLElement",
    hgroup: "HTMLElement",
    hr: "HTMLHRElement",
    html: "HTMLHtmlElement",
    i: "HTMLElement",
    iframe: "HTMLIFrameElement",
    img: "HTMLImageElement",
    input: "HTMLInputElement",
    ins: "HTMLModElement",
    kbd: "HTMLElement",
    keygen: "HTMLElement",
    label: "HTMLLabelElement",
    legend: "HTMLLegendElement",
    li: "HTMLLIElement",
    link: "HTMLLinkElement",
    main: "HTMLElement",
    map: "HTMLMapElement",
    mark: "HTMLElement",
    menu: "HTMLElement",
    menuitem: "HTMLElement",
    meta: "HTMLMetaElement",
    meter: "HTMLElement",
    nav: "HTMLElement",
    noindex: "HTMLElement",
    noscript: "HTMLElement",
    object: "HTMLObjectElement",
    ol: "HTMLOListElement",
    optgroup: "HTMLOptGroupElement",
    option: "HTMLOptionElement",
    output: "HTMLElement",
    p: "HTMLParagraphElement",
    param: "HTMLParamElement",
    picture: "HTMLElement",
    pre: "HTMLPreElement",
    progress: "HTMLProgressElement",
    q: "HTMLQuoteElement",
    rp: "HTMLElement",
    rt: "HTMLElement",
    ruby: "HTMLElement",
    s: "HTMLElement",
    samp: "HTMLElement",
    slot: "HTMLSlotElement",
    script: "HTMLScriptElement",
    section: "HTMLElement",
    select: "HTMLSelectElement",
    small: "HTMLElement",
    source: "HTMLSourceElement",
    span: "HTMLSpanElement",
    strong: "HTMLElement",
    style: "HTMLStyleElement",
    sub: "HTMLElement",
    summary: "HTMLElement",
    sup: "HTMLElement",
    table: "HTMLTableElement",
    template: "HTMLTemplateElement",
    tbody: "HTMLTableSectionElement",
    td: "HTMLTableDataCellElement",
    textarea: "HTMLTextAreaElement",
    tfoot: "HTMLTableSectionElement",
    th: "HTMLTableHeaderCellElement",
    thead: "HTMLTableSectionElement",
    time: "HTMLElement",
    title: "HTMLTitleElement",
    tr: "HTMLTableRowElement",
    track: "HTMLTrackElement",
    u: "HTMLElement",
    ul: "HTMLUListElement",
    "var": "HTMLElement",
    video: "HTMLVideoElement",
    wbr: "HTMLElement",
    webview: "HTMLWebViewElement",

    // SVG
    svg: "SVGSVGElement",

    animate: "SVGElement",
    animateMotion: "SVGElement",
    animateTransform: "SVGElement",
    circle: "SVGCircleElement",
    clipPath: "SVGClipPathElement",
    defs: "SVGDefsElement",
    desc: "SVGDescElement",
    ellipse: "SVGEllipseElement",
    feBlend: "SVGFEBlendElement",
    feColorMatrix: "SVGFEColorMatrixElement",
    feComponentTransfer: "SVGFEComponentTransferElement",
    feComposite: "SVGFECompositeElement",
    feConvolveMatrix: "SVGFEConvolveMatrixElement",
    feDiffuseLighting: "SVGFEDiffuseLightingElement",
    feDisplacementMap: "SVGFEDisplacementMapElement",
    feDistantLight: "SVGFEDistantLightElement",
    feDropShadow: "SVGFEDropShadowElement",
    feFlood: "SVGFEFloodElement",
    feFuncA: "SVGFEFuncAElement",
    feFuncB: "SVGFEFuncBElement",
    feFuncG: "SVGFEFuncGElement",
    feFuncR: "SVGFEFuncRElement",
    feGaussianBlur: "SVGFEGaussianBlurElement",
    feImage: "SVGFEImageElement",
    feMerge: "SVGFEMergeElement",
    feMergeNode: "SVGFEMergeNodeElement",
    feMorphology: "SVGFEMorphologyElement",
    feOffset: "SVGFEOffsetElement",
    fePointLight: "SVGFEPointLightElement",
    feSpecularLighting: "SVGFESpecularLightingElement",
    feSpotLight: "SVGFESpotLightElement",
    feTile: "SVGFETileElement",
    feTurbulence: "SVGFETurbulenceElement",
    filter: "SVGFilterElement",
    foreignObject: "SVGForeignObjectElement",
    g: "SVGGElement",
    image: "SVGImageElement",
    line: "SVGLineElement",
    linearGradient: "SVGLinearGradientElement",
    marker: "SVGMarkerElement",
    mask: "SVGMaskElement",
    metadata: "SVGMetadataElement",
    mpath: "SVGElement",
    path: "SVGPathElement",
    pattern: "SVGPatternElement",
    polygon: "SVGPolygonElement",
    polyline: "SVGPolylineElement",
    radialGradient: "SVGRadialGradientElement",
    rect: "SVGRectElement",
    stop: "SVGStopElement",
    switch: "SVGSwitchElement",
    symbol: "SVGSymbolElement",
    text: "SVGTextElement",
    textPath: "SVGTextPathElement",
    tspan: "SVGTSpanElement",
    use: "SVGUseElement",
    view: "SVGViewElement",
}
